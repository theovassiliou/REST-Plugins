module API_DB_Fahrplan {
	modulepar
		charstring BASE_URL := "https://api.deutschebahn.com/fahrplan-plus/v1";
	modulepar
		charstring AUTHORIZATION := "Bearer b78d0f3bedce61f05f42e5103e8b68b3";

	type universal charstring string;
	type string dateISO8601;

	type record GetLocation {
		string locationName
	}
	with {
		encode "REST/get";
		variant "path: /location/{locationName}";
		encode (locationName) "path";
		variant (locationName) "niu - not in use"
	}

	type record GetArrivalBoard {
		string id, dateISO8601 date
	}
	with {
		encode "REST/get";
		variant "path: /arrivalBoard/{id}?date={date}";
	}

	type record GetArrivalBoard_Response {
		record of Board boards
	}
	with {
		encode "REST/getResponse";
		encode (boards) "type: Board"
	}

	type record Board {
		string name,
		string type_,
		string boardId,
		string stopId,
		string stopName,
		string dateTime,
		string origin,
		string track optional,
		string detailsId
	}
	with {
		variant (type_) "type"
	}

	type record Location {
		string name, float lon, float lat, string id
	}

	type record GetLocation_Response {
		record of Location locations
	}
	with {
		encode "REST/getResponse";
		encode (locations) "type: Location"
	}

	template GetLocation getLocation(string _name) := {locationName := _name}
	template GetArrivalBoard getArrivalBoard(string _id, dateISO8601 _date) := { id := _id, date := _date}
	

	type port RESTfull message {
		out GetLocation; in GetLocation_Response;
		out GetArrivalBoard; in GetArrivalBoard_Response;
		map param (charstring baseUrl, charstring authorization);
	}

	type component RESTComponent {
		port RESTfull p;
	}

	type component DBRestService {
		port RESTfull s;
	}
}
with {
	encode "RESTfull/json"
}
