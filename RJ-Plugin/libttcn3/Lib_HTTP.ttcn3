module Lib_HTTP {
	type universal charstring string;

	type record HTTPRequest {
		string method, string basePath optional, string path, Body body optional
	}

	type record HTTPResponse {
		StatusLine statusLine, set of Header headers, Body body optional
	}
	with {
		encode "HTTP/response"
	}

	type record StatusLine {
		integer statusCode, string reasonPhrase optional
	}

	type record Body {
		string messageBodyTxt optional, octetstring messageBodyRaw optional
	}

	type record Header {
		string name, string val
	}


	type record RESTAPIconfig {
		string baseUrl,
		string authorization optional,
		boolean unitTestMode optional
	}


	type port HTTPPort message {
		in HTTPResponse;
		out all;
		map param (RESTAPIconfig config);
		address EncodedRequest;
	}

	type record EncodedRequest {
		string requestLine, record of string headers optional, string body optional
	} 	with {
		variant "HTTP/encodedRequest"
	}

	type component HTTPClient {
		port HTTPPort service;
	}

	type component HTTPServer {
		port HTTPPort server;
	}

	external function base64Encode(string msg) return charstring;
}
with {
	encode "HTTP/json"
}