module RequestTests {
	import from Lib_HTTP all;

	const charstring BASE_URL := "https://" & host & basePath;
		modulepar charstring host := "petstore.swagger.io";
		const charstring basePath := "/v2";

		
	type port HTTPPort message {
		in HTTPResponse;
		out FindByStatus;
		map param (RESTAPIconfig config);
	}
	with {
		encode "RESTful"
	}

	type record FindByStatus {
		record of StatusEnum status
	}
	with { 
		encode "REST/get";
		variant "path: /pet/findByStatus";
		encode (status) "query"
	}

	type string StatusEnum ("available", "pending", "sold");

	testcase T1() runs on RequestTests.RESTComponent system RequestTests.TSRestService {
	 map(mtc:service, system:server) param (RESTAPIconfig:{
			baseUrl := BASE_URL,
			authorization := omit,
			unitTestMode := true
		});
		
		service.send(FindByStatus:{
			{StatusEnum:"available"}}
		);
			
		service.receive(?);
	}


	type component RESTComponent {
		port HTTPPort service;
	}
	
	type component TSRestService {
		port HTTPPort server;
	}
}